apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'io.fabric'  //1L
apply plugin: 'net.ltgt.errorprone'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion deps.android.build.compileSdkVersion

    lintOptions {
        checkReleaseBuilds true
        lintConfig file("lint.xml")
        enable "Interoperability"
    }

    defaultConfig {
        minSdkVersion deps.android.build.minSdkVersion
        targetSdkVersion deps.android.build.targetSdkVersion
        versionCode 9
        versionName "9.0.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(STORE_FILE)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    flavorDimensions "pageType"
    productFlavors {
        madani {
            applicationId "com.ermile.salamquran.android"
        }
    }

    buildTypes {
        beta {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
            signingConfig signingConfigs.release
            versionNameSuffix "-beta"
            if (project.hasProperty('disableCrashlytics')) {
                ext.enableCrashlytics = false
            }
            matchingFallbacks = ['debug']
        }

        debug {
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
            signingConfig signingConfigs.release
            if (project.hasProperty('disableCrashlytics')) {
                ext.enableCrashlytics = false
            }
        }
    }

    applicationVariants.all { variant ->
        resValue "string", "authority", applicationId + '.data.QuranDataProvider'
        resValue "string", "file_authority", applicationId + '.fileprovider'
        if (applicationId.endsWith("debug")) {
            mergedFlavor.manifestPlaceholders = [app_debug_label: "Quran " + flavorName.capitalize()]
        }
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            outputs.upToDateWhen { false }
            showStandardStreams true
            exceptionFormat "full"
        }
    }
    androidExtensions {
        experimental = true
    }
}

if (new File(rootDir, 'extras/extras.gradle').exists()) {
    apply from: new File(rootDir, 'extras/extras.gradle')
} else {
    apply from: 'pluggable.gradle'
}

dependencies {
    implementation project(path: ':common:data')
    implementation project(path: ':common:networking')
    implementation project(path: ':common:pages')
    implementation project(path: ':common:search')

    implementation deps.kotlin.stdlib
    implementation "androidx.appcompat:appcompat:${androidxAppcompatVersion}"
    implementation "androidx.media:media:${androidxMediaVersion}"
    implementation "androidx.preference:preference:${androidxPreferencesVersion}"
    implementation "androidx.recyclerview:recyclerview:${androidxVersion}"
    implementation "com.google.android.material:material:${androidxVersion}"
    implementation 'io.reactivex.rxjava2:rxjava:2.2.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt deps.dagger.apt
    implementation deps.dagger.runtime

    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    implementation 'com.squareup.moshi:moshi:1.8.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    testImplementation 'junit:junit:4.12'
    testImplementation 'com.google.truth:truth:0.42'
    testImplementation "org.mockito:mockito-core:2.23.4"
    testImplementation "com.squareup.okhttp3:mockwebserver:${okhttpVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${espressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${espressoVersion}"
    errorprone 'com.google.errorprone:error_prone_core:2.3.2'
//  implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'

//  salamquran
    implementation 'com.google.android.material:material:1.2.0-alpha02'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'
//  exo player
    implementation 'com.google.android.exoplayer:exoplayer:2.10.4'
//  Slider ViewPager
    implementation 'com.github.lsjwzh.RecyclerViewPager:lib:v1.1.2'
//  Photo Viewer
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'


//----------
}
