// Generated by Dagger (https://google.github.io/dagger).
package com.salamquran.android.presenter.translation;

import com.salamquran.android.data.QuranInfo;
import com.salamquran.android.database.TranslationsDBAdapter;
import com.salamquran.android.model.translation.TranslationModel;
import com.salamquran.android.util.QuranSettings;
import com.salamquran.android.util.ShareUtil;
import com.salamquran.android.util.TranslationUtil;
import dagger.internal.Factory;
import javax.inject.Provider;

public final class TranslationPresenter_Factory implements Factory<TranslationPresenter> {
  private final Provider<TranslationModel> translationModelProvider;

  private final Provider<QuranSettings> quranSettingsProvider;

  private final Provider<TranslationsDBAdapter> translationsAdapterProvider;

  private final Provider<TranslationUtil> translationUtilProvider;

  private final Provider<ShareUtil> shareUtilProvider;

  private final Provider<QuranInfo> quranInfoProvider;

  private final Provider<Integer[]> pagesProvider;

  public TranslationPresenter_Factory(Provider<TranslationModel> translationModelProvider,
      Provider<QuranSettings> quranSettingsProvider,
      Provider<TranslationsDBAdapter> translationsAdapterProvider,
      Provider<TranslationUtil> translationUtilProvider, Provider<ShareUtil> shareUtilProvider,
      Provider<QuranInfo> quranInfoProvider, Provider<Integer[]> pagesProvider) {
    this.translationModelProvider = translationModelProvider;
    this.quranSettingsProvider = quranSettingsProvider;
    this.translationsAdapterProvider = translationsAdapterProvider;
    this.translationUtilProvider = translationUtilProvider;
    this.shareUtilProvider = shareUtilProvider;
    this.quranInfoProvider = quranInfoProvider;
    this.pagesProvider = pagesProvider;
  }

  @Override
  public TranslationPresenter get() {
    return new TranslationPresenter(translationModelProvider.get(), quranSettingsProvider.get(), translationsAdapterProvider.get(), translationUtilProvider.get(), shareUtilProvider.get(), quranInfoProvider.get(), pagesProvider.get());
  }

  public static TranslationPresenter_Factory create(
      Provider<TranslationModel> translationModelProvider,
      Provider<QuranSettings> quranSettingsProvider,
      Provider<TranslationsDBAdapter> translationsAdapterProvider,
      Provider<TranslationUtil> translationUtilProvider, Provider<ShareUtil> shareUtilProvider,
      Provider<QuranInfo> quranInfoProvider, Provider<Integer[]> pagesProvider) {
    return new TranslationPresenter_Factory(translationModelProvider, quranSettingsProvider, translationsAdapterProvider, translationUtilProvider, shareUtilProvider, quranInfoProvider, pagesProvider);
  }

  public static TranslationPresenter newTranslationPresenter(TranslationModel translationModel,
      QuranSettings quranSettings, TranslationsDBAdapter translationsAdapter,
      TranslationUtil translationUtil, ShareUtil shareUtil, QuranInfo quranInfo, Integer[] pages) {
    return new TranslationPresenter(translationModel, quranSettings, translationsAdapter, translationUtil, shareUtil, quranInfo, pages);
  }
}
