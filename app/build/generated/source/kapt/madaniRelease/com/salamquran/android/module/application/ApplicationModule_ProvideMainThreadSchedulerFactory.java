// Generated by Dagger (https://google.github.io/dagger).
package com.salamquran.android.module.application;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import io.reactivex.Scheduler;

public final class ApplicationModule_ProvideMainThreadSchedulerFactory implements Factory<Scheduler> {
  private final ApplicationModule module;

  public ApplicationModule_ProvideMainThreadSchedulerFactory(ApplicationModule module) {
    this.module = module;
  }

  @Override
  public Scheduler get() {
    return proxyProvideMainThreadScheduler(module);
  }

  public static ApplicationModule_ProvideMainThreadSchedulerFactory create(
      ApplicationModule module) {
    return new ApplicationModule_ProvideMainThreadSchedulerFactory(module);
  }

  public static Scheduler proxyProvideMainThreadScheduler(ApplicationModule instance) {
    return Preconditions.checkNotNull(instance.provideMainThreadScheduler(), "Cannot return null from a non-@Nullable @Provides method");}
}
